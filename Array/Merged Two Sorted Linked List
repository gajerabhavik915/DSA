
# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def mergeTwoLists(self, list1: Optional[ListNode], list2: Optional[ListNode]) -> Optional[ListNode]:
        head = temp = ListNode()  #created new linkedlist with pointer of temp
        while list1 and list2:
            if list1.val < list2.val: #if the value of first linked list will be samller, then it will be added to newly created linkedlist
                temp.next = list1 
                list1 = list1.next #it will move the pointer one step ahead.
            else:
                temp.next = list2
                list2 = list2.next
            temp = temp.next
        temp.next = list1 or list2  #incase, any linkedlist ( list1 or list2 ) does not exist, it will add only directly the existing linkedlist to new one.
        return head.next
